from typing import Any

class Btn:
    def attach(self, *argv) -> Any: ...
    def deinit(self, *argv) -> Any: ...
    def detach(self, *argv) -> Any: ...
    def multiBtnCb(self, *argv) -> Any: ...
    def restart(self, *argv) -> Any: ...
    def timerCb(self, *argv) -> Any: ...

class BtnChild:
    def deinit(self, *argv) -> Any: ...
    def isPressed(self, *argv) -> Any: ...
    def isReleased(self, *argv) -> Any: ...
    def pressFor(self, *argv) -> Any: ...
    def restart(self, *argv) -> Any: ...
    def upDate(self, *argv) -> Any: ...
    def wasDoublePress(self, *argv) -> Any: ...
    def wasPressed(self, *argv) -> Any: ...
    def wasReleased(self, *argv) -> Any: ...

class I2S:
    CHANNEL_ALL_LEFT: int
    CHANNEL_ALL_RIGHT: int
    CHANNEL_ONLY_LEFT: int
    CHANNEL_ONLY_RIGHT: int
    CHANNEL_RIGHT_LEFT: int
    DAC_BOTH_EN: int
    DAC_DISABLE: int
    DAC_LEFT_EN: int
    DAC_RIGHT_EN: int
    FORMAT_I2S: int
    FORMAT_I2S_LSB: int
    FORMAT_I2S_MSB: int
    FORMAT_PCM: int
    FORMAT_PCM_LONG: int
    FORMAT_PCM_SHORT: int
    I2S_NUM_0: int
    I2S_NUM_1: int
    MODE_ADC_BUILT_IN: int
    MODE_DAC_BUILT_IN: int
    MODE_MASTER: int
    MODE_PDM: int
    MODE_RX: int
    MODE_SLAVE: int
    MODE_TX: int
    def adc_enable(self, *argv) -> Any: ...
    def bits(self, *argv) -> Any: ...
    def deinit(self, *argv) -> Any: ...
    def init(self, *argv) -> Any: ...
    def nchannels(self, *argv) -> Any: ...
    def read(self, *argv) -> Any: ...
    def sample_rate(self, *argv) -> Any: ...
    def set_adc_pin(self, *argv) -> Any: ...
    def set_dac_mode(self, *argv) -> Any: ...
    def set_pin(self, *argv) -> Any: ...
    def start(self, *argv) -> Any: ...
    def stop(self, *argv) -> Any: ...
    def volume(self, *argv) -> Any: ...
    def write(self, *argv) -> Any: ...

class IP5306:
    def getBatteryLevel(self, *argv) -> Any: ...
    def init(self, *argv) -> Any: ...
    def isChargeFull(self, *argv) -> Any: ...
    def isCharging(self, *argv) -> Any: ...
    def setCharge(self, *argv) -> Any: ...
    def setChargeVolt(self, *argv) -> Any: ...
    def setVinMaxCurrent(self, *argv) -> Any: ...

class Rgb_multi:
    def deinit(self, *argv) -> Any: ...
    def setBrightness(self, *argv) -> Any: ...
    def setColor(self, *argv) -> Any: ...
    def setColorAll(self, *argv) -> Any: ...
    def setColorFrom(self, *argv) -> Any: ...
    def setShowLock(self, *argv) -> Any: ...
    def show(self, *argv) -> Any: ...

class Speaker:
    def _timeout_cb(self, *argv) -> Any: ...
    def checkInit(self, *argv) -> Any: ...
    def setBeat(self, *argv) -> Any: ...
    def setVolume(self, *argv) -> Any: ...
    def sing(self, *argv) -> Any: ...
    def tone(self, *argv) -> Any: ...

apikey: str
binascii: Any
btn: Any
btnA: Any
btnB: Any
btnC: Any

def btnText() -> None: ...
def const() -> None: ...

display: Any

def get_sd_state() -> None: ...
def hwDeinit() -> None: ...

lcd: Any
m5base: Any
machine: Any
node_id: str
os: Any
power: Any
rgb: Any

def sd_mount() -> None: ...
def sd_umount() -> None: ...

speaker: Any
timEx: Any
timeSchedule: Any
time_ex: Any
timerSch: Any
