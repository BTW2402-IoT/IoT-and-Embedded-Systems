from typing import Any

class Btn:
    def attach(self, *argv) -> Any: ...
    def deinit(self, *argv) -> Any: ...
    def detach(self, *argv) -> Any: ...
    def multiBtnCb(self, *argv) -> Any: ...
    def restart(self, *argv) -> Any: ...
    def timerCb(self, *argv) -> Any: ...

class BtnChild:
    def deinit(self, *argv) -> Any: ...
    def isPressed(self, *argv) -> Any: ...
    def isReleased(self, *argv) -> Any: ...
    def pressFor(self, *argv) -> Any: ...
    def restart(self, *argv) -> Any: ...
    def upDate(self, *argv) -> Any: ...
    def wasDoublePress(self, *argv) -> Any: ...
    def wasPressed(self, *argv) -> Any: ...
    def wasReleased(self, *argv) -> Any: ...

class IP5306:
    def getBatteryLevel(self, *argv) -> Any: ...
    def init(self, *argv) -> Any: ...
    def isChargeFull(self, *argv) -> Any: ...
    def isCharging(self, *argv) -> Any: ...
    def setCharge(self, *argv) -> Any: ...
    def setChargeVolt(self, *argv) -> Any: ...
    def setVinMaxCurrent(self, *argv) -> Any: ...

class M5Cloud:
    def _backend(self, *argv) -> Any: ...
    def _daemonTask(self, *argv) -> Any: ...
    def _error(self, *argv) -> Any: ...
    def _exec_respond(self, *argv) -> Any: ...
    def _msg_deal(self, *argv) -> Any: ...
    def _send_data(self, *argv) -> Any: ...
    def on_connect(self, *argv) -> Any: ...
    def on_data(self, *argv) -> Any: ...
    def run(self, *argv) -> Any: ...

class MQTTClient:
    def _clean_sock_buffer(self, *argv) -> Any: ...
    def _recv_len(self, *argv) -> Any: ...
    def _send_str(self, *argv) -> Any: ...
    def check_msg(self, *argv) -> Any: ...
    def connect(self, *argv) -> Any: ...
    def disconnect(self, *argv) -> Any: ...
    def lock_msg_rec(self, *argv) -> Any: ...
    def ping(self, *argv) -> Any: ...
    def publish(self, *argv) -> Any: ...
    def set_block(self, *argv) -> Any: ...
    def set_callback(self, *argv) -> Any: ...
    def set_last_will(self, *argv) -> Any: ...
    def socket_connect(self, *argv) -> Any: ...
    def subscribe(self, *argv) -> Any: ...
    def topic_get(self, *argv) -> Any: ...
    def topic_msg_get(self, *argv) -> Any: ...
    def unlock_msg_rec(self, *argv) -> Any: ...
    def wait_msg(self, *argv) -> Any: ...

class Rgb_multi:
    def deinit(self, *argv) -> Any: ...
    def setBrightness(self, *argv) -> Any: ...
    def setColor(self, *argv) -> Any: ...
    def setColorAll(self, *argv) -> Any: ...
    def setColorFrom(self, *argv) -> Any: ...
    def setShowLock(self, *argv) -> Any: ...
    def show(self, *argv) -> Any: ...

STA_BUSY: int
STA_DOWNLOAD: int
STA_IDLE: int
STA_UPLOAD: int

class Speaker:
    def _timeout_cb(self, *argv) -> Any: ...
    def checkInit(self, *argv) -> Any: ...
    def setBeat(self, *argv) -> Any: ...
    def setVolume(self, *argv) -> Any: ...
    def sing(self, *argv) -> Any: ...
    def tone(self, *argv) -> Any: ...

_thread: Any
apikey: str
binascii: Any
btn: Any
btnA: Any
btnB: Any
btnC: Any

def btnText() -> None: ...
def cfgRead() -> None: ...
def cfgWrite() -> None: ...

config_normal: str

def const() -> None: ...
def core_start() -> None: ...

display: Any

def flowDeinit() -> None: ...

class flowExit: ...

gc: Any

def getP2PData() -> None: ...
def get_sd_state() -> None: ...
def hwDeinit() -> None: ...

io: Any
json: Any
lcd: Any

def loopExit() -> None: ...
def loopSetIdle() -> None: ...
def loopState() -> None: ...

m5base: Any
machine: Any

def modeSet() -> None: ...

module: Any
network: Any
node_id: str
os: Any
power: Any

def reconnect() -> None: ...
def remoteInit() -> None: ...
def resetDefault() -> None: ...

rgb: Any

def sd_mount() -> None: ...
def sd_umount() -> None: ...
def sendP2PData() -> None: ...
def setP2PData() -> None: ...

speaker: Any

def start() -> None: ...
def startBeep() -> None: ...

sys: Any
timEx: Any
time: Any
timeSchedule: Any
time_ex: Any
timerSch: Any
unit: Any

def wait() -> None: ...
def wait_ms() -> None: ...

wlan_sta: Any
