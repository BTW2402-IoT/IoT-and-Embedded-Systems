from typing import Any

class I2C:
    CBTYPE_ADDR: int
    CBTYPE_NONE: int
    CBTYPE_RXDATA: int
    CBTYPE_TXDATA: int
    MASTER: int
    READ: int
    SLAVE: int
    WRITE: int
    def address(self, *argv) -> Any: ...
    def begin(self, *argv) -> Any: ...
    def callback(self, *argv) -> Any: ...
    def clock_timing(self, *argv) -> Any: ...
    def data_timing(self, *argv) -> Any: ...
    def deinit(self, *argv) -> Any: ...
    def end(self, *argv) -> Any: ...
    def getdata(self, *argv) -> Any: ...
    def init(self, *argv) -> Any: ...
    def is_ready(self, *argv) -> Any: ...
    def read_byte(self, *argv) -> Any: ...
    def read_bytes(self, *argv) -> Any: ...
    def readfrom(self, *argv) -> Any: ...
    def readfrom_into(self, *argv) -> Any: ...
    def readfrom_mem(self, *argv) -> Any: ...
    def readfrom_mem_into(self, *argv) -> Any: ...
    def resetbusy(self, *argv) -> Any: ...
    def scan(self, *argv) -> Any: ...
    def setdata(self, *argv) -> Any: ...
    def start(self, *argv) -> Any: ...
    def start_timing(self, *argv) -> Any: ...
    def stop(self, *argv) -> Any: ...
    def stop_timing(self, *argv) -> Any: ...
    def timeout(self, *argv) -> Any: ...
    def write_byte(self, *argv) -> Any: ...
    def write_bytes(self, *argv) -> Any: ...
    def writeto(self, *argv) -> Any: ...
    def writeto_mem(self, *argv) -> Any: ...

M_BUS: Any
PAHUB0: Any
PAHUB1: Any
PAHUB2: Any
PAHUB3: Any
PAHUB4: Any
PAHUB5: Any
PORTA: Any
PORTC: Any

class Pahub_I2C:
    def deinit(self, *argv) -> Any: ...
    def is_ready(self, *argv) -> Any: ...
    def readfrom(self, *argv) -> Any: ...
    def readfrom_into(self, *argv) -> Any: ...
    def readfrom_mem(self, *argv) -> Any: ...
    def readfrom_mem_into(self, *argv) -> Any: ...
    def scan(self, *argv) -> Any: ...
    def writeto(self, *argv) -> Any: ...
    def writeto_mem(self, *argv) -> Any: ...

bus_0: Any
bus_1: Any
bus_other: Any

class easyI2C:
    def available(self, *argv) -> Any: ...
    def read(self, *argv) -> Any: ...
    def read_reg(self, *argv) -> Any: ...
    def read_u16(self, *argv) -> Any: ...
    def read_u8(self, *argv) -> Any: ...
    def scan(self, *argv) -> Any: ...
    def write_u16(self, *argv) -> Any: ...
    def write_u8(self, *argv) -> Any: ...

def get() -> None: ...

struct: Any
time: Any
