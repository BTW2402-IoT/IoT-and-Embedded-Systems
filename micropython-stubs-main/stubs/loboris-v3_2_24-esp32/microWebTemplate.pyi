from typing import Any

class MicroWebTemplate:
    def Execute(self, *args) -> Any: ...
    INSTRUCTION_ELIF: str
    INSTRUCTION_ELSE: str
    INSTRUCTION_END: str
    INSTRUCTION_FOR: str
    INSTRUCTION_IF: str
    INSTRUCTION_INCLUDE: str
    INSTRUCTION_PYTHON: str
    TOKEN_CLOSE: str
    TOKEN_CLOSE_LEN: int
    TOKEN_OPEN: str
    TOKEN_OPEN_LEN: int
    def Validate(self, *args) -> Any: ...
    def _parseBloc(self, *args) -> Any: ...
    def _parseCode(self, *args) -> Any: ...
    def _processInstructionELIF(self, *args) -> Any: ...
    def _processInstructionELSE(self, *args) -> Any: ...
    def _processInstructionEND(self, *args) -> Any: ...
    def _processInstructionFOR(self, *args) -> Any: ...
    def _processInstructionIF(self, *args) -> Any: ...
    def _processInstructionINCLUDE(self, *args) -> Any: ...
    def _processInstructionPYTHON(self, *args) -> Any: ...
    def _processToken(self, *args) -> Any: ...

re: Any
