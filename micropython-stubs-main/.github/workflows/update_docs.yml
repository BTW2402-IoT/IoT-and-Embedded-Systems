# This will attempt to retrieve and add/update documentation

name: update_docs

on:
  workflow_dispatch:
  schedule:
    - cron: "0 1 * * *"   # Run everyday at 01:00
  workflow_run:
    workflows:
      - ""


jobs:
  # job prepare sets everything up
  update-docs:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    continue-on-error: true

    # Most scripts will be run from the stubs repo, set that as default
    defaults:
      run:
        shell: bash
        working-directory: ${{github.workspace}}/micropython-stubs
  # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      ######################################
      # Check out repo:
      # josverl/micropython-stubs
      ######################################

      - name: Checkout stubs repo
        uses: actions/checkout@v2
        with:
          repository: josverl/micropython-stubs
          path: micropython-stubs

      # make Python work
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          cache: 'pip'

      - name: Install Python dependencies (doc only)
        working-directory: ${{github.workspace}}/micropython-stubs
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt

      ######################################
      # This is where the actual work starts
      ######################################

      - name: Update Documentation
        working-directory: ${{github.workspace}}/micropython-stubs/docs
        run: |
          python update_docs.py

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3
        # ref: https://github.com/peter-evans/create-pull-request
        with:
          path: micropython-stubs
          title: 'update module documentation'
          commit-message: updated the documentation regarding the covered modules
          branch: document-updates
          reviewers: josverl          
          labels: |
            automated pr
            documentation
          delete-branch: true

      # - name: exit gracefully
      #   run: |
      #     echo 'avoid throwing a fit when an existing PR was updated'
      #   if: ${{steps.cpr.exit == 1 }}
      #   # if: ${{ failure() }}

